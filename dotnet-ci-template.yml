parameters:
- name: buildConfiguration
  default: Release
  values:
  - Release
  - Debug
- name: restoreFeed
  type: string
- name: publishFeed
  type: string

steps:
- task: UseDotNet@2
  displayName: Install .net core
  inputs:
    version: '3.1.x'
    packageType: runtime

- task: gitversion/setup@0
  displayName: Install GitVersion
  inputs:
    versionSpec: '5.3.7'

- task: gitversion/execute@0
  displayName: Determine and update version
  inputs:
    additionalArguments: '/updateprojectfiles'

- script: |
    echo FullSemVer: $(fullSemVer)
    echo ##vso[build.updatebuildnumber]$(fullSemVer)
  displayName: Update build number

- task: DotNetCoreCLI@2
  displayName: Restore .net project(s)
  inputs:
    command: restore
    feedRestore: ${{ parameters.restoreFeed }}

- task: DotNetCoreCLI@2
  displayName: Build .net project(s)
  inputs:
    command: build
    projects: '**/*.csproj'
    arguments: '--configuration ${{ parameters.buildConfiguration }}'

- task: DotNetCoreCLI@2
  displayName: Test .net project(s)
  inputs:
    command: test
    projects: '**/*Test/*.csproj'
    arguments: '--configuration ${{ parameters.buildConfiguration }} --collect "Code coverage"'

- task: DotNetCoreCLI@2
  displayName: Pack .net project(s)
  inputs: 
    command: pack
    versioningScheme: byEnvVar
    versionEnvVar: 'GitVersion.NuGetVersionV2'

- ${{ if ne(parameters.publishFeed, '') }}:
  - task: DotNetCoreCLI@2
    displayName: Push .net project(s)
    inputs:
      command: push
      searchPatternPush: '$(Build.ArtifactStagingDirectory)/*.nupkg;!$(Build.ArtifactStagingDirectory)/*.Test.nupkg'
      feedPublish: ${{ parameters.publishFeed }}